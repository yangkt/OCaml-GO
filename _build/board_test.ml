open Board
open OUnit2

let empty_9 = Array.make_matrix 9 9 0
let empty_13 = Array.make_matrix 13 13 0
let empty_19 = Array.make_matrix 19 19 0

(* (0, 0), (1, 1), (2, 2), (3, 3), (4,4), (5,5) are all 1 *)
let b1 = empty_9 |> Board.assign 0 0 1 |> set 1 1 1 |> set 2 2 1
                 |> set 3 3 1 |> set 4 4 1 |> set 5 5 1
get_pos_1_b1 = [(5,5);(4,4);(3,3);(2,2);(1,1);(0;0)]
get_pos_2_b1 = []
get_pos_2_b1_size = 12




let board_test = [
(******************************************************************************
    Test is_empty
*******************************************************************************)
 "empty board 1" >:: (fun _ -> assert_equal true (empty_9));
 "empty board 1" >:: (fun _ -> assert_equal true (Board.create 9));
 "empty board 1" >:: (fun _ -> assert_equal false (empty_9));
 "empty board 1" >:: (fun _ -> assert_equal true (empty_9));

(******************************************************************************
    Test get_pos
*******************************************************************************)



(******************************************************************************
    Test place
*******************************************************************************)



(******************************************************************************
    Test score
*******************************************************************************)

]

